<?xml version="1.0" encoding="utf-8"?>
<console>
    <!--
        控制台配置
        name : 控制台名称
        shell_cmd_name : 可直接执行的命令名称（注册到操作系统的软连接）
        version : 版本，前面无需带V
        language : 当前语言, 默认是en，可以选择zh_cn
        i18n : 多语言翻译文件的存放目录（如果是相对目录，会以启动时的工作目录为准）;
            注：如果不传值，会默认以当前安装包的目录找i18n目录
        shell_encoding : 控制台命令行编码，一般来说windows为GBK，linux为utf-8
        message : 命令行的开头提示信息
        shell_cmd_help : 命令行直接执行的帮助信息(json)
        start_tips : 启动时提示的信息(json)
        exit_with_prompt : 关闭命令行时是否提示用户操作(y/n), 默认为y
        color_set : 命令行配色方案，如果采用默认方案可不传，每个配色格式类似为'#000088 bg:#aaaaff underline'
            input : 用户输入，默认为'#F2F2F2'
            cmd : 命令，默认为'#13A10E'
            name_para : key-value形式参数名， 默认为'#C19C00'
            short_para: -char形式的短参数字符， 默认为'#3B78FF'
            long_para: -name形式的长参数字符，默认为'#FFFF00'
            word_para: word 形式的词字符，默认为'#C19C00',  # word 形式的词字符
            wrong_tip: 错误的命令或参数名提示，默认为'#FF0000 bg:#303030', 也可以参考格式：#ff0000 bg:#ffffff reverse
            prompt: prompt提示信息，默认为'#F2F2F2'
        auto_run : 启动时自动执行的命令配置
            module_name : 模块名，注意应包含包路径
            class_name : 处理类名
            extend_path : 如果模块不在标准python搜索路径中，应传入搜索该模块的路径
            init_para : 处理类初始化传入的JSON参数(字典形式)
            as_name : 增加该参数项并设置不同的值，让同一个类实例化为多个对象进行执行(例如初始化参数不一样)
                注：如果不设置该参数，一个类只会实例化一次
            run_cmd : 要执行的cmd命令
            run_cmd_para : 要执行的cmd命令参数
        default_dealfun : 默认处理函数配置（匹配不到命令的时候执行）
        on_abort : Ctrl + C 取消本次输入执行函数
        on_exit : Ctrl + D 关闭命令行执行函数
        logger : 控制台的日志配置，如果不需要配置日志，可删除整个配置节点
            conf_file_name : 日志配置文件路径和文件名
            logger_name : 输出日志类型：Console_输出到屏幕,File_输出到文件,ConsoleAndFile_同时输出到屏幕和文件
                注：根据日志具体配置，也可以在配置中自定义输出日志类型，例如myLoggerName
            logfile_path : 日志输出文件的路径（含文件名），如果已有配置文件的情况下该参数无效，不传值时代表使用'log/程序名.log'来定义输出文件的路径
            config_type : 日志配置文件方式: JSON_FILE _ JSON格式配置文件，INI_FILE _ INI格式配置文件，JSON_STR _ JSON字符串，XML_FILE _ XML格式配置文件
                注：如果是文件类型，指定conf_file_name的配置文件格式
            json_str : config_type为JSON_STR时，相应的JSON格式的配置信息内容
            auto_create_conf : 是否自动创建配置文件（找不到指定的配置文件时）
            is_create_logfile_by_day : 指定是否按天生成新的日志文件
            call_fun_level : 指定log函数输出文件名和函数名的层级
        cmd_list : 嵌入的命令参数，每一个cmd标签就是一个命令配置
            command : cmd命令
            module_name : 模块名，注意应包含包路径
            class_name : 处理类名
            extend_path : 如果模块不在标准python搜索路径中，应传入搜索该模块的路径
            init_para : 处理类初始化传入的JSON参数(字典形式)
            as_name : 增加该参数项并设置不同的值，让同一个类实例化为多个对象进行执行(例如初始化参数不一样)
                注：如果不设置该参数，一个类只会实例化一次
            cmd_para : 命令控制参数字典，如果只有命令无参数该字段可空，具体参数含义见HiveNetLib的prompt_plus手册
            help : 命令帮助信息，是一个json格式的字典，key为帮助信息对应的语言，value为显示的多行数组
                注：如果在字典里找不到对应的语言，则默认取第一个显示
    -->
    <name>HiveNetLib</name>
    <shell_cmd_name>hivenet</shell_cmd_name>
    <version>0.1.0</version>
    <language>en</language>
    <i18n></i18n>
    <shell_encoding>GBK</shell_encoding>
    <message>HiveNet/>&#160;</message>
    <shell_cmd_help>{
        "en": [
            "",
            "{{NAME}} Power by Li Huijian @ 2019",
            "1. if you want to enter {{NAME}} Console, please execute '{{SHELL_CMD_NAME}}' in command line;",
            "2. if you want to use self config file, please use 'config=you config file' para, and use 'encoding=utf-8' set the file encoding, like:",
            "    # {{SHELL_CMD_NAME}} config=\"/myapp/config.xml\"",
            "3. you can execute command use system shell directly, use 'shell_cmd=\"command string\"', like:",
            "    # {{SHELL_CMD_NAME}} shell_cmd=\"cd d:/test/\"",
            "    or use the follow method execute some command list in order",
            "    # {{SHELL_CMD_NAME}} shell_cmd=\"[\\\"command 1\\\", \\\"command 2\\\", ...]\"",
            "    Note:",
            "    (1)if the command string has '\"', use '\\\"' transferred;",
            "    (2)if the command string has '\\', use '\\\\' transferred;",
            "    (3)for many command list，the list must use '\"' to sign the string.",
            "4. you can execute a command list file, use 'shell_cmdfile=\"cmdfile\"', one command in one line in the file, like:",
            "    # {{SHELL_CMD_NAME}} shell_cmdfile=\"cmd.txt\"",
            "    Note: you can use 'cmdfile_encoding=uft-8' set the enconding of cmdfile",
            ""
        ],
        "zh_cn": [
                "",
                "{{NAME}} Power by 黎慧剑 @ 2019",
                "1. 要进入 {{NAME}} 控制台请在命令行输入 '{{SHELL_CMD_NAME}}'",
                "2. 如果需要指定自定义配置文件, 请使用'config=自定义配置文件'参数, 以及通过'encoding=utf-8'指定配置文件编码, 例如:",
                "    # {{SHELL_CMD_NAME}} config=\"/myapp/config.xml\"",
                "3. 可以直接通过命令行直接执行所需要的命令, 使用'shell_cmd=\"需执行的命令\"', 例如:",
                "    # {{SHELL_CMD_NAME}} shell_cmd=\"cd d:/test/\"",
                "    或用以下数组方式顺序执行多个命令",
                "    # {{SHELL_CMD_NAME}} shell_cmd=\"[\\\"命令1\\\", \\\"命令2\\\", ...]\"",
                "    注意:",
                "    (1)如果命令中有'\"'符号, 可以通过'\\\"'进行转义;",
                "    (2)如果命令中需要有'\\', 可以通过'\\\\'进行转义;",
                "    (3)多个命令的情况，数组中的命令必须使用'\"'作为字符串的标识.",
                "4. 可以执行一个包含多个命令的文件，使用'shell_cmdfile=\"命令文件\"', 文件中一行是一个命令, 例如:",
                "    # {{SHELL_CMD_NAME}} shell_cmdfile=\"cmd.txt\"",
                "    注意: 可以使用'cmdfile_encoding=uft-8'指定解析文件的编码",
                ""
        ]
    }
    </shell_cmd_help>
    <start_tips>{
        "en": [
            "",
            "{{NAME}} Console V{{VERSION}}",
            "Power by Li Huijian @ 2019",
            "please type \"help\" to get help info",
            "you can use Ctrl+C cancle when inputing, or use Ctrl+D exit the Console",
            ""
        ],
        "zh_cn": [
                "",
                "{{NAME}} Console (控制台)  V{{VERSION}}",
                "Power by 黎慧剑 @ 2019",
                "查看命令帮助请执行 help 命令",
                "输入过程中可通过Ctrl+C取消输入，通过Ctrl+D退出命令行处理服务",
                ""
        ]
    }
    </start_tips>
    <exit_with_prompt>y</exit_with_prompt>
    <color_set>
        <!-- 设置为空让字体能同时适应黑白背景 -->
        <input></input>
        <prompt></prompt>
    </color_set>
    <auto_run>
        <module_name></module_name>
        <class_name></class_name>
        <extend_path></extend_path>
        <init_para></init_para>
        <as_name></as_name>
        <run_cmd></run_cmd>
        <run_cmd_para></run_cmd_para>
    </auto_run>
    <default_dealfun>
        <module_name>HiveNetLib.simple_console.base_cmd</module_name>
        <class_name>CmdDefault</class_name>
        <extend_path></extend_path>
        <init_para></init_para>
    </default_dealfun>
    <on_abort>
        <module_name>HiveNetLib.simple_console.base_cmd</module_name>
        <class_name>CmdOnAbort</class_name>
        <extend_path></extend_path>
        <init_para></init_para>
    </on_abort>
    <on_exit>
        <module_name>HiveNetLib.simple_console.base_cmd</module_name>
        <class_name>CmdOnExit</class_name>
        <extend_path></extend_path>
        <init_para></init_para>
    </on_exit>
    <logger>
        <conf_file_name></conf_file_name>
        <logger_name>Console</logger_name>
        <logfile_path></logfile_path>
        <config_type>JSON_STR</config_type>
        <json_str>{
                    "version": 1,
                    "disable_existing_loggers": false,
                    "formatters": {
                        "simpleFormatter": {
                            "format": "[%(asctime)s.%(millisecond)s][%(levelname)s][PID:%(process)d][TID:%(thread)d][FILE:%(filename)s][FUN:%(funcName)s]%(message)s",
                            "datefmt": "%Y_%m_%d %H:%M:%S"
                        }
                    },

                    "handlers": {
                        "ConsoleHandler": {
                            "class": "logging.StreamHandler",
                            "level": "DEBUG",
                            "formatter": "simpleFormatter",
                            "stream": "ext://sys.stdout"
                        }
                    },

                    "loggers": {
                        "Console": {
                            "level": "DEBUG",
                            "handlers": ["ConsoleHandler"]
                        }
                    },

                    "root": {
                        "level": "DEBUG",
                        "handlers": []
                    }
                }</json_str>
        <auto_create_conf>true</auto_create_conf>
        <is_create_logfile_by_day>true</is_create_logfile_by_day>
        <call_fun_level>0</call_fun_level>
    </logger>
    <cmd_list type="list">
        <cmd>
            <command>help</command>
            <module_name>HiveNetLib.simple_console.base_cmd</module_name>
            <class_name>CommonCmd</class_name>
            <extend_path></extend_path>
            <init_para></init_para>
            <cmd_para>{}
            </cmd_para>
            <help>{
                "en": [
                    "Support {{NAME}} console commands help info",
                    "",
                    "help [command]",
                    "    command : show the [command string] command's help info",
                    "",
                    "demo: help help",
                    ""
                ],
                "zh_cn": [
                    "提供 {{NAME}} 控制台命令的帮助信息",
                    "",
                    "help [command]",
                    "    command : 显示指定 command 命令的帮助信息",
                    "",
                    "示例: help help",
                    ""
                ]
            }
            </help>
        </cmd>
        <cmd>
            <command>exit</command>
            <module_name>HiveNetLib.simple_console.base_cmd</module_name>
            <class_name>CmdOnExit</class_name>
            <extend_path></extend_path>
            <init_para></init_para>
            <cmd_para>{}
            </cmd_para>
            <help>{
                "en": [
                    "Exit {{NAME}} console",
                    "",
                    "demo: exit",
                    ""
                ],
                "zh_cn": [
                    "退出 {{NAME}} 控制台",
                    "",
                    "示例: exit",
                    ""
                ]
            }
            </help>
        </cmd>
        <cmd>
            <command>pwd</command>
            <module_name>HiveNetLib.simple_console.base_cmd</module_name>
            <class_name>CommonCmd</class_name>
            <extend_path></extend_path>
            <init_para></init_para>
            <cmd_para>{}
            </cmd_para>
            <help>{
                "en": [
                    "Show current work path",
                    "",
                    "demo: pwd",
                    ""
                ],
                "zh_cn": [
                    "显示当前工作目录",
                    "",
                    "示例: pwd",
                    ""
                ]
            }
            </help>
        </cmd>
        <cmd>
            <command>setlanguage</command>
            <module_name>HiveNetLib.simple_console.base_cmd</module_name>
            <class_name>CommonCmd</class_name>
            <extend_path></extend_path>
            <init_para></init_para>
            <cmd_para>{
                "word_para": {
                    "en": "",
                    "zh_cn": ""
                }
            }
            </cmd_para>
            <help>{
                "en": [
                    "Change language",
                    "",
                    "setlanguage lang",
                    "    lang : tag of language, like 'en' or 'zh_ch'",
                    "",
                    "demo: setlanguage en",
                    ""
                ]
            }
            </help>
        </cmd>
        <cmd>
            <command>cd</command>
            <module_name>HiveNetLib.simple_console.base_cmd</module_name>
            <class_name>CommonCmd</class_name>
            <extend_path></extend_path>
            <init_para></init_para>
            <cmd_para>{}
            </cmd_para>
            <help>{
                "en": [
                    "Change current work path",
                    "",
                    "cd path",
                    "    path : new work path",
                    "",
                    "demo: cd d:\\test\\",
                    ""
                ],
                "zh_cn": [
                    "修改当前工作目录",
                    "",
                    "cd path",
                    "    path : 要修改的工作目录",
                    "",
                    "示例: cd d:\\test\\",
                    ""
                ]
            }
            </help>
        </cmd>
        <cmd>
            <command>syscmd</command>
            <module_name>HiveNetLib.simple_console.base_cmd</module_name>
            <class_name>CommonCmd</class_name>
            <extend_path></extend_path>
            <init_para></init_para>
            <cmd_para>{
                "long_para": {
                    "ni": [],
                    "bg": [],
                    "ns": []
                }
            }
            </cmd_para>
            <help>{
                "en": [
                        "Execute system command",
                        "",
                        "syscmd [-ni] [-bg] [-ns] [command]",
                        "    command : execute system command, can be followed by specific execution parameters",
                        "    -ni : No interruption allowed, Ctrl + C encountered when specifying this parameter is masked and waits for the command to complete",
                        "    -bg : Background execution parameters, this parameter represents the command executing in the background, an interrupt does not end the command execution process",
                        "    -ns : Execution results are not displayed, specifies that this parameter does not output the information that the command executes",
                        "",
                        "demo: syscmd dir /w",
                        ""
                ],
                "zh_cn": [
                        "执行操作系统自有命令",
                        "",
                        "syscmd [-ni] [-bg] [-ns] [command]",
                        "    command : 执行操作系统命令，命令后面可以带具体执行参数",
                        "    -ni : 不允许中断，指定该参数时遇到 Ctrl + C 会被屏蔽并等待命令执行完成",
                        "    -bg : 后台执行参数，执行该参数代表命令在后台执行，中断时不会结束命令执行进程",
                        "    -ns : 不显示执行结果，指定该参数不输出命令执行所输出的信息",
                        "",
                        "示例: syscmd dir /w",
                        ""
                ]
            }
            </help>
        </cmd>
    </cmd_list>
</console>